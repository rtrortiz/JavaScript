

<html>
<body>

  

<script>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//-Avoiding Polluting the Global Scope-Namespaces
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//--Problem--
//--The two functions below have a the same function name, which leads to one function overriding the other
//--both functions are floating in the global/window namespace

	function customer(firstName, lastName){

        this.firstName = firstName;
        this.lastName = lastName;
        this.getFullName = function(){

            return this.firstName + " " + this.lastName;
        }
    }

        function customer(firstName, lastName){

        this.firstName = firstName;
        this.lastName = lastName;
        this.getFullName = function(){

            return this.firstName + " " + this.lastName;
        }
    }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //--Solution--
    //Assign each function to a different namespace
    //use the js console/developer tools, type 'keys(window)' to see that 'namespace1' and 'namespace2' are part of the global/window namespace
    // And then type into the console 'window.nameSpace1' and 'window.nameSpace2' to see their respective functions outputed to the console
    var nameSpace1 = nameSpace1 || {};
    nameSpace1.TeamA =  nameSpace1.TeamA || {};

    nameSpace1.TeamA.customer = function (firstName, lastName){

              this.firstName = firstName;
              this.lastName = lastName;
              this.getFullName = function(){

            return this.firstName + " " + this.lastName;
        }

            return this;
    }



     var nameSpace2 = nameSpace2 || {};
     nameSpace2.TeamB =  nameSpace2.TeamB || {};

     nameSpace2.TeamB.customer = function (firstName, lastName){

              this.firstName = firstName;
              this.lastName = lastName;
              this.getFullName = function(){

            return this.firstName + " " + this.lastName;
        }

            return this;
    }

    ////////////////////////////////////////////////////////////////////////////
    alert(window.nameSpace1.TeamA.customer("James", "Hetfield").getFullName());
    alert(window.nameSpace2.TeamB.customer("jesse", "ortiz").getFullName());

</script>

</body>
</html>

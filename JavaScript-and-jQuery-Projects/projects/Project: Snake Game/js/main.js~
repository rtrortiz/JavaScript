var grid = [];//empty array
var pause = 0;
var points = 0;
var speed = 200;
var game_interval;
var snake = {

	pos: [[10, 10]],
	dir: "right",
	size: 1

};

var food = {

	pos: [],
	present: false


};

//=============================================================================

$(document).ready(function(){

	initialize();
	start_game();//sets click event on the start button

})


//=============================================================================
// Snake Game Set up
//=============================================================================

var start_game = function(){

	$('.overlay').show();

	$('.restart').one('click', (function(){

		$('.overlay').hide();
		game_interval = setInterval(game_loop, speed);

	}));


}

var initialize = function(){

	for(var i = 0; i < 20; i+=1){//20 is the amount of squares on each row of the grid

		grid[i] = [];//passing 20 empty arrays
		
	    for(var j = 0; j < 20; j+=1){

		 grid[i][j] = "";//'i' creates 20 arrays within the grids array and 'j' creates 20 items within those arrays that have a blank value


	     }//end of second for loop


	}//end of first for loop

	$('.score').html('Score: '+points);
	$('.grid-wrapper').prepend('<div class="overlay"></div>');
	$('.overlay').append('<button type="button" class="restart">Play</button>');
	
	create_grid();


}


var create_grid = function(){

	for(var i = 0; i < grid.length; i+=1){//grid length is 20

	   $('.grid-wrapper').append('<div class="row"></div>');//Creates 20 rows. Uses the grid length as a guide as to how many rows to create. Each row contains 20 blocks/squares.There are 20 rows/horizontal

		for(var j = 0; j < grid[i].length; j+=1){// 'i' is each individual array, while 'j' is each item within those individ array

		     $('.row:last-child').append('<div class="block">'+grid[i][j]+'</div>');//creates the 20 individual squares for the grid

		}//end of second for loop

	}//end of first for loop



}

//=============================================================================================================================================
// Get User Input(Keyboard)
//=============================================================================================================================================

var get_key_input = function(){

	$('body').one("keydown", (function(event){

		var key = event.which;
	
		switch(key){

			case 37:
				if(snake.size < 2 || (snake.size > 1 && snake.dir != "right"))
					snake.dir = "left";
				break;
			
			case 38:
				if(snake.size < 2 || (snake.size > 1 && snake.dir != "down"))
					snake.dir = "up";
				break;

			case 39:
				if(snake.size < 2 || (snake.size > 1 && snake.dir != "left"))
					snake.dir = "right";
				break;
			case 40:

				if(snake.size < 2 || (snake.size > 1 && snake.dir != "up"))
					snake.dir = "down";
				break;
			case 80:
				pause ^= 1;
				pause_game();
				break;
			default:	
				snake.dir = "right";

		}
		
	}))

}

//==============================================================================================================================================
// Pause Game
//=============================================================================================================================================

var pause_game = function(){

	if(pause == 1){

		clearInterval(game_interval);

	}//end of if statement
	  else{

		game_interval = setInterval(game_loop, speed);//the variable game_interval first given a value here

	  }

}

//=============================================================================================================================================
// Game loop
//=============================================================================================================================================


//invokes the Snake games inportant functions here

var game_loop = function(){

	spawn_food();
	get_key_input();
	move();
	detect_collision();
	render();

}

//=============================================================================================================================================
// Move 
//=============================================================================================================================================

var move = function(){

	var len = snake.size;//current length of snake
	var head = snake.pos[0].slice();

	switch(snake.dir){
		case "left":
			head[1]--;//decrements
 			break;
		case "up":
			head[0]--;//decrements
			break;
		case "right":
			head[1]++;//increments
			break;
		case "down":
			head[0]++;//increments
			break;
		default:

	}//end switch statement


	if(head.every(function(element, index){

		return element === food.pos[index]//study
	
	})){

		update_game(head);

	}//end of if statement

	else{

		for(var i = len; i > 0; i--){

			snake.pos[i] = snake.pos[i-1].slice();

		}//end of for loop

		snake.pos[0] = head;


	}//end of else statement

}

//==============================================================================================================================================
// Update Game
//==============================================================================================================================================


var update_game = function(head){

	snake.pos.unshift(head);//removes item from the end of pos
	snake.size++;//increment by one the size of the snake
	food.present = false;
	clearInterval(game_interval);
	game_interval = setInterval(game_loop, speed-=10);
	points++;
	
}

//==============================================================================================================================================
// Render Snake
//==============================================================================================================================================

var render = function(){

	var head = snake.pos[0];
	var tail = snake.pos[snake.pos.length -1];

	$('.row:nth-child('+(tail[0]+2)+') .block:nth-child('+(tail[1]+1)+')').removeClass('blue-block red-block');
	$('.row:nth-child('+(food.pos[0]+2)+') .block:nth-child('+(food.pos[1]+1)+')').addClass('red-block');
	$('.row:nth-child('+(head[0]+2)+') .block:nth-child('+(head[1]+1)+')').addClass('blue-block');
	$('.score').html('Score: '+points);

}

//==============================================================================================================================================
// Snake's Food
//==============================================================================================================================================

var spawn_food = function(){

	if(food.present == false){

		food.pos = [Math.floor(Math.random()*19), Math.floor(Math.random()*19)]//randomly place the snake's food somewhere on the grid
		food.present = true;
		console.log(food.pos);//269

	}//end of if statement


}

//=============================================================================================================================================
// Restart Game
//=============================================================================================================================================

var restart_game = function(){

	for(var i = 0; i < snake.size; i+=1){

	    $('.row:nth-child('+(snake.pos[i][0]+2)+') .block:nth-child('+(snake.pos[i][1]+1)+')').removeClass('blue-block red-block');
	
	}//end of for loop

	$('.row:nth-child('+(food.pos[0]+2)+') .block:nth-child('+(food.pos[1]+1)+')').removeClass('red-block');

	pause = 0;
	points = 0;
	speed = 200;
	snake.pos = [[10, 10]];
	snake.dir = "right";
	snake.size = 1;
	food.pos = [];
	food.present = false;
	$('.overlay').hide();
	game_interval = setInterval(game_loop,speed);


}


//==============================================================================================================================================
// Detect Collision
//==============================================================================================================================================

var detect_collision = function(){

	var game_over = false;
	// Wall collision
	if(snake.pos[0][1] > 19 || snake.pos[0][0] > 19 || snake.pos[0][1] < 0 || snake.pos[0][0] < 0){

		game_over = true;

	}//end of if statement

	//Self collision
	for(var i = 1; i < snake.size; i+=1){

		if((snake.pos[0]).every(function(element, index){

			return element === snake.pos[i][index];

		})){
			game_over = true;

		}//end of if statement

	}//end of for loop
	

		if(game_over){

			clearInterval(game_interval);
			$('.overlay').show();
			$('.restart').one("click", function(){
				
				restart_game();

			});
		}//end of if statement


}





















































